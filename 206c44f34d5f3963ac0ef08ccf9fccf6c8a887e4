{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c7c0c319_0bb3bb00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T14:50:05Z",
      "side": 1,
      "message": "\u003e Patch Set 3:\n\u003e \n\u003e \u003e \u003e \u003e stderr:\n\u003e \u003e \u003e \u003e terminate called after throwing an instance of \u0027sdbusplus::exception::SdBusError\u0027\n\u003e \u003e \u003e \u003e   what():  sd_bus_request_name: org.freedesktop.DBus.Error.FileExists: File exists\n\u003e \u003e \u003e \u003e ------------------------------------------------------------------------------\n\u003e \u003e \u003e Where are the `sd_bus_request_name` calls even coming from during the tests?\n\u003e \u003e \n\u003e \u003e I don\u0027t see that the sd_bus_request_name is being called during the tests, Patrick If I remove all the test and keep only one test then it is getting timedout.\n\u003e \n\u003e I\u0027m lost.  We\u0027re throwing an error that can only be created from this sdbusplus code:\n\u003e \n\u003e     /** @brief Claim a service name on the dbus.\n\u003e      *\n\u003e      *  @param[in] service - The service name to claim.\n\u003e      */\n\u003e     void request_name(const char* service)\n\u003e     {\n\u003e         int r \u003d _intf-\u003esd_bus_request_name(_bus.get(), service, 0);\n\u003e         if (r \u003c 0)\n\u003e         {\n\u003e             throw exception::SdBusError(-r, \"sd_bus_request_name\");\n\u003e         }\n\u003e     }\n\nIt has been solved, now the CI has been passed.",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5560b13c_06ed39c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "Thanks Patrick for the review. ",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "719f171a_36c4ffb6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-05-31T09:28:45Z",
      "side": 1,
      "message": "As phosphor-snmp is migrated to meson, abandoned this commit.",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8c4c234_a131adbe",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "After this commit you might want to revise how this is done.  We\u0027ve generally been reducing these kind of configurations.  It is kind of pointless to have a bunch of code in meson for what is effectively a constant in a header file.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 22,
        "endChar": 77
      },
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7b0b649_b8a1c82f",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "Sure, Let me fix this with separate commit",
      "parentUuid": "d8c4c234_a131adbe",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 22,
        "endChar": 77
      },
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90a17d91_c3951891",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "Are you going to add a wrap file for this?  Seems rather pointless to have all the wrapfiles if it still isn\u0027t going to work.",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2515ba02_313f6e2e",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "your suggestion is to remove the other wrap file too?",
      "parentUuid": "90a17d91_c3951891",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d199777_3d365863",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T18:35:24Z",
      "side": 1,
      "message": "Well, no, ideally you\u0027d _add_ a wrap file for net-snmp.  I don\u0027t think you should remove the ones you have at this point.  But, the fact that you have them would have implied to me that you somehow tested them... which you probably didn\u0027t if this one is missing.",
      "parentUuid": "2515ba02_313f6e2e",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83b85935_32a3b39a",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-12T11:50:49Z",
      "side": 1,
      "message": "Yes, I tested to compile this and I didn\u0027t hit the issue related to netsnmp as it was already there on my build system.\n\nphosphor-dbus-interfaces| Program true found: YES (/bin/true)\nphosphor-dbus-interfaces| Build targets in project: 459\nphosphor-dbus-interfaces| Subproject phosphor-dbus-interfaces finished.\n\nDependency phosphor-dbus-interfaces from subproject subprojects/phosphor-dbus-interfaces found: YES 1.0.0\nDependency sdbusplus from subproject subprojects/sdbusplus found: YES 1.0.0\nRun-time dependency phosphor-logging found: NO (tried pkgconfig and cmake)\nLooking for a fallback subproject for the dependency phosphor-logging\n\nExecuting subproject phosphor-logging \n\nphosphor-logging| Project name: phosphor-logging\nphosphor-logging| Project version: 1.0.0\nphosphor-logging| C++ compiler for the host machine: c++ (gcc 7.5.0 \"c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\")\nphosphor-logging| C++ linker for the host machine: c++ ld.bfd 2.30\nphosphor-logging| Program python3 found: YES (/usr/bin/python3)\nphosphor-logging| Run-time dependency systemd found: YES 237\nphosphor-logging| Dependency sdbusplus found: YES 1.0.0 (cached)\nphosphor-logging| Dependency phosphor-dbus-interfaces found: YES 1.0.0 (cached)\nphosphor-logging| Configuring config.h using configuration\nphosphor-logging| Build targets in project: 461\nphosphor-logging| Subproject phosphor-logging finished.\n\nDependency phosphor-logging from subproject subprojects/phosphor-logging found: YES 1.0.0\nLibrary libnetsnmp found: YES",
      "parentUuid": "0d199777_3d365863",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d5ebc05_91c21196",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-12T17:20:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "83b85935_32a3b39a",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95d339fe_7a60ba01",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "These aren\u0027t needed by libsnmp?  I\u0027m a little surprised.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 84,
        "endChar": 32
      },
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98d2ae0_25104ab2",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "Yes, libsnmp is the shared library where we are only giving the function to send the trap with the data, hence we don\u0027t need all other source files.",
      "parentUuid": "95d339fe_7a60ba01",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 84,
        "endChar": 32
      },
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eea41bb_b5c08f25",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "I don\u0027t really understand how this has more content than libsnmp on line 97 (additional src files) but has less dependencies (missing libnetsnmp).  Is this really correct?  If so, why does libsnmp need libnetsnmp?",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0fa0967_9fa750e7",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 88,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "snmp_lib is providing the Dbus daemon to configure the Dbus clients.\nlibsnmp : Caller(bmc services) needs to call the function sendTrap with the data which needs to be sent to the snmp trap daemon.",
      "parentUuid": "7eea41bb_b5c08f25",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67cc00d6_be943bc2",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "Doesn\u0027t there need to be a \u0027requires\u0027 line?",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b27acf7_3adb58c0",
        "filename": "meson.build",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "Let me see this.",
      "parentUuid": "67cc00d6_be943bc2",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce4f0a85_eb64da38",
        "filename": "meson_options.txt",
        "patchSetId": 5
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "Is this really interesting to configure?  Does anyone?  I\u0027d probably follow up and remove this as a configuration option.",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c329bc_40a621a9",
        "filename": "meson_options.txt",
        "patchSetId": 5
      },
      "lineNbr": 4,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "I don\u0027t think so it should be configurable, should be hardcoded in the code.\nI will fix this up as a separate commit.",
      "parentUuid": "ce4f0a85_eb64da38",
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f43992a8_3131312a",
        "filename": "test/meson.build",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-10T14:53:05Z",
      "side": 1,
      "message": "Maybe decrease the line length a little.",
      "range": {
        "startLine": 31,
        "startChar": 80,
        "endLine": 31,
        "endChar": 95
      },
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcfb179e_54d78460",
        "filename": "test/meson.build",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2022-01-10T17:22:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f43992a8_3131312a",
      "range": {
        "startLine": 31,
        "startChar": 80,
        "endLine": 31,
        "endChar": 95
      },
      "revId": "206c44f34d5f3963ac0ef08ccf9fccf6c8a887e4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}